input {  
 file {
    path => "G:\Elasticsearch Trainings\Elastic search books\kibana visualizations data\loganalysis\apache_logs1.txt"
    type => "apache_logs"
	ignore_older => 0
    start_position => "beginning"
  }
}
filter {
  grok {
   #match => {
    #    "message" => "%{COMMONAPACHELOG}"
     # }
  
   match => {
     "message" => '%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) %{QS:referrer} %{QS:agent}'
    }
  }

  date {
    match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
    locale => en
  }

  geoip {
    source => "clientip"
  }

  useragent {
    source => "agent"
    target => "useragent"
  }
}

output {
  stdout {
    codec => rubydebug {}
  }
 elasticsearch {
    action => "index"
    hosts => "localhost:9200"
    index => "apache_logs-%{+YYYY.MM}"
	user => "elastic"
	password => "elastic"
	template => "G:\Elasticsearch Trainings\Elastic search books\kibana visualizations data\loganalysis\apache_template.json"
	template_overwrite => true
    }
	
}
